// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorCRUD.Client.Pages.Personas
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 2 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#line 3 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#line 4 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 5 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 6 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 7 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using BlazorCRUD.Client;

#line default
#line hidden
#line 8 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using BlazorCRUD.Client.Shared;

#line default
#line hidden
#line 9 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using BlazorCRUD.Shared.Models;

#line default
#line hidden
#line 10 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using BlazorCRUD.Client.Helpers;

#line default
#line hidden
#line 11 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using OfficeOpenXml;

#line default
#line hidden
#line 12 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using OfficeOpenXml.Style;

#line default
#line hidden
#line 13 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\_Imports.razor"
using System.Drawing;

#line default
#line hidden
#line 4 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\Pages\Personas\Index.razor"
using System.IO;

#line default
#line hidden
#line 5 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\Pages\Personas\Index.razor"
using CsvHelper;

#line default
#line hidden
#line 6 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\Pages\Personas\Index.razor"
using System.Text.Json;

#line default
#line hidden
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/indice-personas")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 69 "E:\Kimen\EjemploPaginacion\BlazorCRUD.Client\Pages\Personas\Index.razor"
       
    List<Persona> personas { get; set; }

    private int paginaActual = 1;
    private int paginasTotales;
    private string nombrePersonaFiltro = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await CargarPersonas();
    }

    private async Task PaginaSeleccionada(int pagina)
    {
        paginaActual = pagina;
        await CargarPersonas(pagina);
    }

    private async Task Filtrar()
    {
        paginaActual = 1;
        await CargarPersonas();
    }

    private async Task Limpiar()
    {
        nombrePersonaFiltro = string.Empty;
        paginaActual = 1;
        await CargarPersonas();
    }

    async Task CargarPersonas(int pagina = 1, int cantidadRegistrosAMostrar = 10)
    {

        
        var httpResponse = await Http.GetAsync($"personas?pagina={pagina}&CantidadAMostrar={cantidadRegistrosAMostrar}&nombre={nombrePersonaFiltro}");
        if (httpResponse.IsSuccessStatusCode)
        {
            paginasTotales = int.Parse(httpResponse.Headers.GetValues("totalPaginas").FirstOrDefault());
            var responseString = await httpResponse.Content.ReadAsStringAsync();
            personas = JsonSerializer.Deserialize<List<Persona>>(responseString,
              new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });
              
            

        }
        else
        {
            Console.WriteLine("error");
        }
        
        
    }

    async Task BorrarPersona(int idPersona)
    {
        var personaSeleccionada = personas.First(x => x.Id == idPersona);
        string mensajeConfirmacion = $"Â¿Deseas borrar a la persona {personaSeleccionada.Nombre}?";
        if (await JS.Confirm("Confirmar", mensajeConfirmacion, TipoMensajeSweetAlert.question))
        {
            await Http.DeleteAsync($"personas/{idPersona}");
            await CargarPersonas();
        }
    }

    private void ExportarCSV()
    {
        using (var memoryStream = new MemoryStream())
        {
            using (var writer = new StreamWriter(memoryStream))
            {
                using (var csv = new CsvWriter(writer))
                {
                    csv.WriteRecords(personas);
                }

                var arr = memoryStream.ToArray();
                JS.GuardarComo("personas.csv", arr);
            }
        }
    }

    private void ExportarExcel()
    {
        using (var package = new ExcelPackage())
        {
            var worksheet = package.Workbook.Worksheets.Add("Personas");

            var tableBody = worksheet.Cells["A1:A1"].LoadFromCollection(
                from f in personas
                select new { f.Id, f.Nombre }, true);

            var header = worksheet.Cells["A1:B1"];
            worksheet.DefaultColWidth = 25;
            tableBody.Style.HorizontalAlignment = ExcelHorizontalAlignment.Left;
            tableBody.Style.Fill.PatternType = ExcelFillStyle.Solid;
            tableBody.Style.Fill.BackgroundColor.SetColor(Color.WhiteSmoke);
            tableBody.Style.Border.BorderAround(ExcelBorderStyle.Medium);
            header.Style.Font.Bold = true;
            header.Style.Font.Color.SetColor(Color.White);
            header.Style.Fill.PatternType = ExcelFillStyle.Solid;
            header.Style.Fill.BackgroundColor.SetColor(Color.DarkBlue);

            JS.GuardarComo("personas.xlsx", package.GetAsByteArray());
        }
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JS { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
